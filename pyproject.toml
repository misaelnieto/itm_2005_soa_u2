[project]
name = "itm-soa-2025-u2"
version = "0.1.0"
description = "Practicas de la materia Arquitectura Orientada a Sistemas - Unidad 2: SOAP"
readme = "README.md"
license = {text = "MIT License"}
dependencies = [
    "click>=8.1.8",
    "colorlog>=6.9.0",
    "flask>=3.1.0",
    "lxml>=5.3.1",
    "mkdocs>=1.6.1",
    "mkdocs-autorefs>=1.4.0",
    "mkdocs-click>=0.8.1",
    "mkdocs-material>=9.6.5",
    "mkdocstrings[python]>=0.28.2",
    "pytest>=8.3.4",
    "pytest-cov>=6.0.0",
    "spyne",
    "suds>=1.2.0",
    "werkzeug>=3.1.3",
]
requires-python = ">=3.13"

authors = [
  {name = "Noe Nieto", email = "nnieto@noenieto.com"},
]

[project.scripts]
webservice = "webservice.app:main"

[tool.uv]
package=true

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["webservice"]

[tool.uv.sources]
spyne = { git = "https://github.com/misaelnieto/spyne.git" }

[tool.pytest.ini_options]
testpaths = [
    "tests",
]
python_files = [
    "test_*.py"
]
markers = [
    "wsgi_app",
]

addopts = [
    "--tb=short",
    # "--cov=webservice"
]
log_cli = true
log_cli_level = "INFO"

[tool.ruff]
line-length = 120
extend-include = [
    ".vscode",
    ".venv"
]
output-format = "grouped"


[tool.ruff.lint]
extend-select = [
  "UP",  # pyupgrade
  "D",   # pydocstyle
  "ERA",  # eradicate
  "B",
  "S", # flake8-bandit
  "BLE", # flake8-blind-except
  "FBT", # flake8-boolean-trap
  "B", # flake8-bugbear
  "A", # flake8-builtins
  "COM", # flake8-commas
  "C", # flake8-comprehensions
  "T10", #flake-debugger
  "FIX", # flake8-fixme
  "ICN", #flake8-import-conventions
  "LOG", #flake8-logging-format
  "G010", "G201", # "flake8-logging-format"
  "PIE", # flake8-pie
  "T20", # flake8-print: No print statements
  "PT", # flake8-pytest-style
  "RET", # flake8-return
  "SIM", # flake8-simplify
  "ARG", # flake8-arguments
  "PTH", # flake8-use-pathlib
  "I", # isort
  "C", # mccabe complexity check
]
ignore = [
    "D104", # Missing docstring in public package
]

[tool.ruff.format]
quote-style = "single"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402"]
"**/{tests,docs,tools}/*" = ["E402"]
"tests/**" = ["S101", "I001"]

[tool.ruff.lint.pydocstyle]
convention = "google"
